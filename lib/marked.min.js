// Marked - Markdown Parser
export const marked = {
    parse: function(text) {
        return text
            // 移除所有空行
            .replace(/^\s*[\r\n]/gm, '')
            
            // Headers (不添加额外空行)
            .replace(/^### (.*$)/gm, '<h3>$1</h3>')
            .replace(/^## (.*$)/gm, '<h2>$1</h2>')
            .replace(/^# (.*$)/gm, '<h1>$1</h1>')
            
            // Strong
            .replace(/\*\*(.*?)\*\*/g, '<strong>$1</strong>')
            
            // Emphasis
            .replace(/\*(.*?)\*/g, '<em>$1</em>')
            
            // Lists (紧凑格式)
            .replace(/^\* (.*$)/gm, '<li>$1</li>')
            .replace(/(<li>.*<\/li>\n?)+/g, '<ul>$&</ul>')
            
            // Code blocks (保持紧凑)
            .replace(/```([\s\S]*?)```/g, '<pre><code>$1</code></pre>')
            
            // Inline code
            .replace(/`([^`]+)`/g, '<code>$1</code>')
            
            // Horizontal rules (紧凑格式)
            .replace(/^---$/gm, '<hr>')
            
            // Paragraphs (紧凑格式)
            .replace(/([^<].*)\n(?=[^<])/g, '<p>$1</p>')
            
            // Line breaks (保留必要的换行)
            .replace(/\n(?![<])/g, '<br>')
            
            // 最后清理多余的空白
            .replace(/>\s+</g, '><')
            .replace(/\s+$/gm, '')
            .trim();
    }
};
